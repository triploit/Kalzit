@(useInstead: "localizedStringAssetAccess, stringAssetAccess")
$simpleStringAssetAccess = cachedFun: ($path ; $_loader ? (default: {loadLocal: x})) fun {
	$object = parseJson: _loader: path.
	!if (not object eq void) {
		cachedFun: ($key ? String) fun {
			key objFirstProperty object
		}
	}
}.

/* @kalzit.for appStrings

	A function for easily accessing app-specific localized strings.
	The strings are specified in JSON files which are placed in the /strings folder of your app project.
*/
$appStrings = !ifElse (void eq stringAssetMap) {
	localizedStringAssetAccess: "/apps/" + appId + "/strings/"
};{
	$languageKey = (!getUserLanguage) propOf stringAssetMap.
	!ifElse (void eq languageKey) {
		$simpleKey = (!getSimpleUserLanguage) objFirstProperty stringAssetMap.
		$actualKey = (default: $strings objFirstProperty stringAssetMap): simpleKey.
		cachedFun: $key fun {key propOf actualKey}
	};{
		cachedFun: $key fun {key propOf languageKey}
	}
}.

/* @kalzit.for strings

	A function which gives you easy access to the global string library, which provides a few standard texts (but not many right now).
	
	For example, you can get a text saying something meaning "Accept cookies" - if available in the user's language:
		print: strings: $cookieAcceptText.
*/
$strings = do: {
	$languageKey = (!getUserLanguage) propOf globalStringAssetMap.
	!ifElse (void eq languageKey) {
		$simpleKey = (!getSimpleUserLanguage) objFirstProperty globalStringAssetMap.
		$actualKey = (default: $strings objFirstProperty globalStringAssetMap): simpleKey.
		cachedFun: $key fun {key propOf actualKey}
	};{
		cachedFun: $key fun {key propOf languageKey}
	}
}.
