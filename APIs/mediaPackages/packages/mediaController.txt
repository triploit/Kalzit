#{
	Causes a medium to pause (by calling its $pause property).
	The medium needs to be specified as the first parameter.
}
$pause = ($_mediaController) fun {do $pause propOf _mediaController}.

#{
	Causes a medium to play from wherever it was paused (by calling its $play property).
	The medium needs to be specified as the first parameter.
}
$play = ($_mediaController) fun {do $play propOf _mediaController}.

#{
	Returns if a media controller is paused, using its $isPaused property
}
$isPaused = ($_mediaController) fun {
	do: $isPaused propOf _mediaController
}.

#{
	Toggles a media controller between playing and pausing. If it is playing now, it will pause after this, and the other way around.
}
$togglePlay = ($_mediaController) fun {
	!ifElse (isPaused: _mediaController) {play:_mediaController};{pause:_mediaController}.
}.

#{
	Defines a value by which to increse or decrease volume when the user requests to make it louder or quieter.
	This value is used when calling "increaseVolume" or "decreaseVolume" on a medium.
	To change the default value for this (0.1), use "volumeStepSizeRef"
}
$volumeStepSize = 0,1.

#{A reference pointing to the global "volumeStepSize" variable}
$volumeStepSizeRef = reference: $volumeStepSize.

#{
	Returns the current volume of an audio controller (any medium with sound). This is done by calling its $getVolume property.
	A volume value should generally range from 0 (not audible) to 1 (the loudest).
	
	The medium needs to be specified as the first parameter.
}
$volume = ($_volumeController) fun {do $getVolume propOf _volumeController}.

#{
	Increases the current volume of an audio controller (any medium with sound). This is done by calling its $getVolume and $setVolume properties.
	The medium needs to be specified as the first parameter.
	
	How much the volume should be increased is defined by "volumeStepSize".
	If the resulting new volume is larger than one (1), which would be to loud, it is set to 1.
}
$increaseVolume = ($_volumeController) fun {($setVolume propOf _volumeController): min: 1;(volume: _volumeController) + volumeStepSize}.

#{
	Decreases the current volume of an audio controller (any medium with sound). This is done by calling its $getVolume and $setVolume properties.
	The medium needs to be specified as the first parameter.
	
	How much the volume should be decreased is defined by "volumeStepSize".
	If the resulting new volume is lower than one (0), which would be to quiet, it is set to 1.
}
$decreaseVolume = ($_volumeController) fun {($setVolume propOf _volumeController): max: 0;(volume: _volumeController) - volumeStepSize}.

#{
	Mutes the volume of an audio controller (any medium with sound) by setting it to zero (0).
	This is done by calling the $setVolume property of the medium.
	The medium needs to be specified as the first parameter.
}
$mute = ($_volumeController) fun {($setVolume propOf _volumeController): 0}.