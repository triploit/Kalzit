$unitDistance ? ModifiableObject =
	["mm";
		[{x};{x}]
	];
	["cm";
		[{x * 10};{x % 10}]
	];
	["dm";
		[{x * 100};{x % 100}]
	];
	["m";	
		[{x * 1000};{x % 1000}]
	];
	["km";
		[{x * 1000000};{x % 1000000}]
	].
	
$unitVolume ? ModifiableObject =
	["mm3";
		[{x};{x}]
	];
	["cm3";
		[{x * 10^3};{x % 10^3}]
	];
	["dm3";
		[{x * 100^3};{x % 100^3}]
	];
	["m3";	
		[{x * 1000^3};{x % 1000^3}]
	];
	["km3";
		[{x * 1000000^3};{x % 1000000^3}]
	].
	
$unitArea ? ModifiableObject =
	["mm2";
		[{x};{x}]
	];
	["cm2";
		[{x * 10^2};{x % 10^2}]
	];
	["dm2";
		[{x * 100^2};{x % 100^2}]
	];
	["m2";	
		[{x * 1000^2};{x % 1000^2}]
	];
	["km2";
		[{x * 1000000^2};{x % 1000000^2}]
	];
	["ha";
		[{x * 10000000000};{x % 10000000000}]
	].
	
$unitMass ? ModifiableObject =
	["mg";
		[{x};{x}]
	];
	["g";	
		[{x * 1000};{x % 1000}]
	];
	["kg";
		[{x * 1000000};{x % 1000000}]
	];
	["t";
		[{x * 1000000000};{x % 1000000000}]
	].
	
$allUnits ? ModifiableList = [unitDistance];[unitArea];[unitVolume];[unitMass].

$findBaseUnit = ($name ; $_unit_groups ? (allUnits default ModifiableList)) fun {
	do $getObject propOf first: {name objHasProperty do: $getObject propOf x} filter do: $getArray propOf _unit_groups
}.
$findUnitConverter = ($_from_to ; $_unit_groups ? (allUnits default ModifiableList)) fun {
	$base = (first: _from_to) findBaseUnit _unit_groups.
	!if (base eq (second: _from_to) findBaseUnit _unit_groups) {
		$startToBase = first: ((first: _from_to) objFirstProperty base).
		$baseToGoal = second: ((second: _from_to) objFirstProperty base).
		($input ? Float) fun {baseToGoal: startToBase: input}
	}.
}.