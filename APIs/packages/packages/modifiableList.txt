$modifiableList = ($_normalList ? (List:Any)) fun {
	!ifElse ((first each _normalList) eq $push;$getArray;$clear;$setOnAddition;$setOnRemoval;$setOnChange;$removeEquals;$removeIndex;$setIndex) {
		_normalList
	};{
		$listVar ? (List:Any) = _normalList. $listVarRef = reference: $listVar.
		$onAdditionList = (). $onAdditionListRef = reference: $onAdditionList. $onAddition = referenceBasedComposedFunction: onAdditionListRef.
		$onRemovalList = (). $onRemovalListRef = reference: $onRemovalList. $onRemoval = referenceBasedComposedFunction: onRemovalListRef.
		$onChangeList = (). $onChangeListRef = reference: $onChangeList. $onChange = referenceBasedComposedFunction: onChangeListRef.
		$listEnd = (). $listEndRef = reference: $listEnd.
		
		["push"; ($_items ? (List:Any)) fun {
			listVarRef = listVar ; _items.
			onAddition each _items.
			!onChange.
			listVar
		}];
		["getArray"; () fun {listVar;listEnd}];
		["clear";() fun {
			$oldListVar = listVar.
			listVarRef = ().
			onRemoval each oldListVar.
			!onChange.
			listVar
		}];
		["setOnAddition";($function) fun {onAdditionListRef = onAdditionList;function}];
		["setOnRemoval";($function) fun {onRemovalListRef = onRemovalList;function}];
		["setOnChange";($function) fun {onChangeListRef = onChangeList;function}];
		["removeEquals";($_item) fun {
			listVarRef = {not: _item eq x} filter listVar.
			onRemoval: _item.
			!onChange.
			listVar
		}];
		["removeIndex";($index ? Int) fun {
			$item = index at listVar.
			listVarRef = ({not: index eq x} filter arrayIndexes) at listVar.
			onRemoval: item.
			!onChange.
			listVar
		}];
		["setIndex";($index ? Int ; $_item) fun {
			listVarRef = ($i fun {
				!ifElse (i eq index) {_item};{i at listVar}
			}) all arrayIndexes: listVar.
			!onChange.
			listVar
		}]
	}
}.