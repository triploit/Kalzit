$modifiableList = ($_normalList ? (List:Any)) fun {
	!ifElse ((first each _normalList) eq $push;$getArray;$clear;$setOnAddition;$setOnRemoval;$setOnChange;$removeEquals;$removeIndex;$setIndex) {
		_normalList
	};{
		$listVarRef ? (Volatile List:Any) = _normalList.
		$onAdditionListRef ? Var = (). $onAddition = referenceBasedComposedFunction: onAdditionListRef.
		$onRemovalListRef ? Var = (). $onRemoval = referenceBasedComposedFunction: onRemovalListRef.
		$onChangeListRef ? Var = (). $onChange = referenceBasedComposedFunction: onChangeListRef.
		$listEndRef ? Var = ().
		
		["push"; ($_items ? (List:Any)) fun {
			listVarRef = ~listVarRef ; _items.
			onAddition each _items.
			!onChange.
			~listVarRef
		}];
		["getArray"; () fun {~listVarRef;~listEndRef}];
		["clear";() fun {
			$oldListVar = ~listVarRef.
			listVarRef = ().
			onRemoval each oldListVar.
			!onChange.
			~listVarRef
		}];
		["setOnAddition";($function) fun {onAdditionListRef = ~onAdditionListRef;function}];
		["setOnRemoval";($function) fun {onRemovalListRef = ~onRemovalListRef;function}];
		["setOnChange";($function) fun {onChangeListRef = ~onChangeListRef;function}];
		["removeEquals";($_item) fun {
			listVarRef = {not: _item eq x} filter ~listVarRef.
			onRemoval: _item.
			!onChange.
			~listVarRef
		}];
		["removeIndex";($index ? Int) fun {
			$item = index at ~listVarRef.
			listVarRef = ({not: index eq x} filter arrayIndexes) at ~listVarRef.
			onRemoval: item.
			!onChange.
			~listVarRef
		}];
		["setIndex";($index ? Int ; $_item) fun {
			listVarRef = ($i fun {
				!ifElse (i eq index) {_item};{i at ~listVarRef}
			}) all arrayIndexes: ~listVarRef.
			!onChange.
			~listVarRef
		}]
	}
}.
