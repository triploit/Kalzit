#{
	This type function allows you to describe a list in which every item has its own type.
	You could describe a list where the first item is an integer and the second one is a boolean:
		
	(Tuple: Int;Boolean)
	
	As you can see, the first parameter of the tuple function is a list of type functions.
}
$tuple = ($_types ? (List:Function)) fun {
	($_values ? (List:Any)) fun {
		{(x at _types): x at _values} each 0 range (length: _types) - 1
	}
}.

#{
	Defines the structure of a normal annotations.
	This type describes a two-sized list, where the irst item is a string and the second item can be any other value.
	
	Usage example to generate an annotation with the key and value "test":
		$isTest ? Annotation = "test". `The value will be "test";"test"`
		@isTest "any value".
}
$Annotation = Tuple: String;Any.