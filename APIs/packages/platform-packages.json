{
    "info": {
      "description": "Libraries that work with all language implementations, written in the language"
  }
  , "libraries": [
      {
        "provides": [
          "deprecated"
        , "use_instead"
      ]
      , "scriptUrl": "annotations/deprecated.txt"
    }
    , {
        "provides": [
          "load_dom_async"
        , "load_dom_inner_async"
      ]
      , "scriptUrl": "loadDom.txt"
    }
    , {
        "provides": [
          "pm_list_registered_names"
        , "pm_search_registered_names"
        , "pm_list_names"
        , "pm_search_names"
      ]
      , "scriptUrl": "pm.txt"
    }
    , {
        "provides": [
          "obj_property"
        , "obj_property_values"
        , "obj_property_value"
        , "obj_has_property"
        , "obj_first_property"
      ]
      , "scriptUrl": "objProperty.txt"
    }
    , {
        "provides": [
          "switch"
        , "if_else"
        , "if"
        , "else"
        , "categorize"
        , "do_each"
        , "if_not"
        , "last_flow_condition_ref"
      ]
      , "scriptUrl": "flow.txt"
    }
    , {
        "provides": [
          "array_joined_chunks"
        , "mingle"
        , "unmingle"
      ]
      , "scriptUrl": "arrayChunks.txt"
    }
    , {
        "provides": [
          "is_match"
      ]
      , "scriptUrl": "regex.txt"
    }
    , {
        "provides": [
          "array_group_by_category"
      ]
      , "scriptUrl": "arrayGroupByCategory.txt"
    }
    , {
        "provides": [
          "str_contains"
        , "str_join"
        , "str_remove"
        , "str_lines"
        , "str_first_line"
      ]
      , "scriptUrl": "str/str.txt"
    }
    , {
        "provides": [
          "str_newline"
        , "str_tab"
      ]
      , "scriptUrl": "str/strSpaces.txt"
    }
    , {
        "provides": [
          "first"
        , "second"
        , "third"
        , "last"
        , "array_indexes"
      ]
      , "scriptUrl": "arrayAccess.txt"
    }
    , {
        "provides": [
          "switch_eq"
        , "switch_first"
      ]
      , "scriptUrl": "switchEq.txt"
    }
    , {
        "provides": [
          "any"
        , "boolean"
        , "list"
        , "string"
        , "sized_list"
        , "one_or_many"
      ]
      , "scriptUrl": "types/basicTypes.txt"
    }
    , {
        "provides": [
          "resolve_name"
      ]
      , "scriptUrl": "resolveName.js"
    }
    , {
        "provides": [
          "final"
      ]
      , "scriptUrl": "types/final.txt"
    }
    , {
        "provides": [
          "eval"
      ]
      , "scriptUrl": "eval.txt"
    }
    , {
        "provides": [
          "tuple"
        , "annotation"
      ]
      , "scriptUrl": "types/tuple.txt"
    }
    , {
        "provides": [
          "default"
      ]
      , "scriptUrl": "types/default.txt"
    }
    , {
        "provides": [
          "url"
      ]
      , "scriptUrl": "types/url.txt"
    }
    , {
        "provides": [
          "sum"
        , "product"
        , "min"
        , "max"
        , "to"
        , "all"
        , "random_item"
      ]
      , "scriptUrl": "arrayLogic.txt"
    }
    , {
        "provides": [
          "str_format"
        , "str_replace"
      ]
      , "scriptUrl": "str/strFormat.txt"
    }
    , {
        "provides": [
          "info"
        , "comment"
      ]
      , "scriptUrl": "annotations/comment.txt"
    }
    , {
        "provides": [
          "true"
        , "false"
        , "not"
      ]
      , "scriptUrl": "booleans.txt"
    }
    , {
        "provides": [
          "range_up"
        , "range_down"
      ]
      , "scriptUrl": "rangeUpDown.txt"
    }
    , {
        "provides": [
          "rgb_color"
        , "color"
        , "color_string"
        , "red"
        , "green"
        , "blue"
        , "black"
        , "white"
      ]
      , "scriptUrl": "colors.txt"
    }
    , {
        "provides": [
          "gcd"
        , "divisors"
      ]
      , "scriptUrl": "arrayMath.txt"
    }
    , {
        "provides": [
          "responsive"
        , "rounded"
      ]
      , "scriptUrl": "responsive.txt"
    }
    , {
        "provides": [
          "modifiable_list"
      ]
      , "scriptUrl": "modifiableList.txt"
    }
    , {
        "provides": [
          "modifiable_object"
      ]
      , "scriptUrl": "modifiableObject.txt"
    }
    , {
        "provides": [
          "cached_fun_object"
        , "cached_fun"
      ]
      , "scriptUrl": "cachedFun.txt"
    }
    , {
        "provides": [
          "auto_cleared_cache"
      ]
      , "scriptUrl": "autoClearedCache.txt"
    }
    , {
        "provides": [
            "prop_of"
      ]
      , "scriptUrl": "of.txt"
    }
    , {
        "provides": [
          "get_array"
      ]
      , "scriptUrl": "getArray.txt"
    }
    , {
        "provides": [
          "curry"
        , "bind"
        , "bind_first_argument"
        , "bind_second_argument"
      ]
      , "scriptUrl": "curry.txt"
    }
    , {
        "provides": [
          "years_to_millis"
        , "days_to_millis"
        , "hours_to_millis"
        , "minutes_to_millis"
        , "seconds_to_millis"
        , "get_current_date_utc"
      ]
      , "scriptUrl": "date.txt"
    }
    , {
        "provides": [
          "url_title_async"
      ]
      , "scriptUrl": "urlTitle.txt"
    }
    , {
        "provides": [
          "string_asset_access"
        , "localized_string_asset_access"
      ]
      , "scriptUrl": "stringAssetAccess.txt"
    }
    , {
        "provides": [
          "fallback_fun"
      ]
      , "scriptUrl": "fallbackFun.txt"
    }
    , {
        "provides": [
          "get_simple_user_language"
      ]
      , "scriptUrl": "userLanguage.txt"
    }
    , {
        "provides": [
        "ui_element"
      ]
      , "scriptUrl": "show.txt"
    }
    , {
        "provides": [
          "image_strings_from_text"
        , "image_strings_from_url_async"
      ]
      , "scriptUrl": "str/imageStrings.txt"
    }
    , {
        "provides": [
          "launch_app"
        , "launch_global_app"
        , "launch_app_name"
        , "relaunch_app"
      ]
      , "scriptUrl": "launchApp.txt"
    }
    , {
        "provides": [
          "media_controller_properties"
        , "media_controller"
      ]
      , "scriptUrl": "types/mediaController.txt"
    }
    , {
        "provides": [
          "developer_mode"
      ]
      , "scriptUrl": "developerMode.txt"
    }
    , {
        "provides": [
          "function"
        , "repeated_function"
      ]
      , "scriptUrl": "types/repeatedFunction.txt"
    }
    , {
        "provides": [
          "ui_action_picker_for_mobile"
        , "ui_index_picker_for_mobile"
      ]
      , "scriptUrl": "pickerForMobile.txt"
    }
    , {
        "provides": [
          "push_if_empty"
      ]
      , "scriptUrl": "pushIfEmpty.txt"
    }
    , {
        "provides": [
          "timeout_now"
      ]
      , "scriptUrl": "timeoutNow.txt"
    }
    , {
        "provides": [
          "composed_function"
      ]
      , "scriptUrl": "composedFunction.txt"
    }
    , {
        "provides": [
          "reference_based_composed_function"
      ]
      , "scriptUrl": "referenceBasedComposedFunction.txt"
    }
  ]
}
